name: Website - Production
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build Website
    runs-on: ubuntu-latest
    steps:
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          
      - name: Checkout website source
        id: checkout-master
        uses: actions/checkout@v2
        
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pelican-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pelican-
            
      - name: Install Pelican and Dependencies
        run: |
          python -m pip install -U pip 
          pip install -r requirements.txt
      
      - name: Install Pelican plugins
        uses: actions/checkout@v2
        with:
          repository: 'getpelican/pelican-plugins'
          path: 'plugins'
        
      - name: Install Pelican themes
        uses: actions/checkout@v2
        with:
          repository: 'getpelican/pelican-themes'
          path: 'themes'
          
      - name: Generate website
        id: generate-website
        run: |
          pelican content --output output --settings publishconf.py
      - name: Package the website artifact
        uses: actions/upload-artifact@v2
        with:
          name: website-output
          path: |
            output/
          retention-days: 1
          
  deploy:
    name: Deploy Website
    runs-on: ubuntu-latest
    needs: [build]
   
    permissions:
      contents: 'read'
      id-token: 'write'
      
    steps:
      - name: Get website artifact
        uses: actions/download-artifact@v2
        with:
          name: website-output
          path: web-files/
      
      - name: Set website file ownership
        run: |
          sudo chown -R www-data:www-data web-files/*
          
      - name: Setup Google Authorization
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: '${{ secrets.WORKLOAD_ID_PROVIDER }}'
          service_account: '${{ secrets.DEPLOY_SERVICE_ACCOUNT }}'
        
      - name: 'Set up gcloud CLI'
        uses: 'google-github-actions/setup-gcloud@v0'
          
      - name: 'Copy Website files to instance'
        run: |
          gcloud compute scp --recurse web-files/* webserver:/var/www/artificialbelligerence.com/htdocs --zone=northamerica-northeast2-a
      
      - name: ' Get the metadata used for copy'
        run: |
          echo "METADATA=$(gcloud compute instances describe webserver --zone=northamerica-northeast2-a --format='yaml(metadata.items[].value)' | grep runner)" >> $GITHUB_ENV
          
      - name: 'Cleanup gcloud CLI and metadata'
        run: |
          gcloud compute instances remove-metadata webserver --keys="${{ env.METADATA }}" --zone=northamerica-northeast2-a
          
          
      